
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDnonassocEQNEQnonassocLTLTEGTGTEleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSNOTAND ASSIGN BREAK CHAR CHAR_LITERAL COMMA COMMENT_MULTI COMMENT_SINGLE CONTINUE DEC DIVIDE ELSE EQ FLOAT FLOAT_LITERAL FOR GT GTE IDENTIFIER IF INC INT INT_LITERAL LBRACE LBRACKET LPAREN LT LTE MINUS MOD NEQ NOT OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING_LITERAL TIMES VOID WHILEprogram : declaration_listdeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declaration\n                   | function_declaration\n                   | function_definition\n                   | array_declarationvar_declaration : type_specifier IDENTIFIER SEMICOLON\n                          | type_specifier TIMES IDENTIFIER SEMICOLONvar_declaration : type_specifier IDENTIFIER ASSIGN expression SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN STRING_LITERAL SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN STRING_LITERAL SEMICOLONtype_specifier : INT\n                      | FLOAT\n                      | CHAR\n                      | VOIDarray_list : array_list COMMA expressionarray_list : expressionfunction_declaration : type_specifier IDENTIFIER LPAREN param_list RPAREN SEMICOLONfunction_definition : type_specifier IDENTIFIER LPAREN param_list RPAREN compound_statementparam_list : param_list COMMA paramparam_list : paramparam_list : emptyparam : type_specifier IDENTIFIERparam : type_specifier IDENTIFIER LBRACKET RBRACKETparam : type_specifier TIMES IDENTIFIERempty :compound_statement : LBRACE statement_list RBRACEstatement_list : statement_list statementstatement_list : statementstatement : expression_statement\n                 | compound_statement\n                 | selection_statement\n                 | iteration_statement\n                 | return_statement\n                 | continue_statement\n                 | break_statement\n                 | var_declaration\n                 | array_declaration\n                 | emptyexpression_statement : expression SEMICOLONexpression : assignment_expression\n                  | binary_expression\n                  | unary_expression\n                  | termassignment_expression : IDENTIFIER ASSIGN expressionassignment_expression : array_access ASSIGN expressionbinary_expression : expression PLUS expression\n                         | expression MINUS expression\n                         | expression TIMES expression\n                         | expression DIVIDE expression\n                         | expression MOD expression\n                         | expression EQ expression\n                         | expression NEQ expression\n                         | expression LT expression\n                         | expression GT expression\n                         | expression LTE expression\n                         | expression GTE expression\n                         | expression AND expression\n                         | expression OR expressionunary_expression : MINUS expression %prec UMINUS\n                        | NOT expression\n                        | INC IDENTIFIER\n                        | DEC IDENTIFIER\n                        | IDENTIFIER INC\n                        | IDENTIFIER DECterm : IDENTIFIER\n            | INT_LITERAL\n            | FLOAT_LITERAL\n            | CHAR_LITERAL\n            | STRING_LITERAL\n            | LPAREN expression RPAREN\n            | function_call\n            | array_accessfunction_call : IDENTIFIER LPAREN argument_list RPARENarray_access : IDENTIFIER LBRACKET expression RBRACKETargument_list : argument_list COMMA expression\n                     | expression\n                     | emptyselection_statement : IF LPAREN expression RPAREN statementselection_statement : IF LPAREN expression RPAREN statement ELSE statementiteration_statement : WHILE LPAREN expression RPAREN statement\n                           | FOR LPAREN expression_statement expression_statement expression RPAREN statement\n                            | FOR LPAREN var_declaration expression_statement expression RPAREN statementreturn_statement : RETURN expression SEMICOLONcontinue_statement : CONTINUE SEMICOLONbreak_statement : BREAK SEMICOLON'
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,13,16,18,44,50,73,98,99,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,141,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[9,9,-3,-4,-5,-6,-7,-2,-8,9,-9,-10,9,-22,-23,9,-11,9,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,9,-89,-90,-14,-88,-13,9,9,-12,-83,-85,9,9,9,-84,-86,-87,]),'FLOAT':([0,2,3,4,5,6,7,13,16,18,44,50,73,98,99,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,141,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[10,10,-3,-4,-5,-6,-7,-2,-8,10,-9,-10,10,-22,-23,10,-11,10,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,10,-89,-90,-14,-88,-13,10,10,-12,-83,-85,10,10,10,-84,-86,-87,]),'CHAR':([0,2,3,4,5,6,7,13,16,18,44,50,73,98,99,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,141,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[11,11,-3,-4,-5,-6,-7,-2,-8,11,-9,-10,11,-22,-23,11,-11,11,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,11,-89,-90,-14,-88,-13,11,11,-12,-83,-85,11,11,11,-84,-86,-87,]),'VOID':([0,2,3,4,5,6,7,13,16,18,44,50,73,98,99,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,141,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[12,12,-3,-4,-5,-6,-7,-2,-8,12,-9,-10,12,-22,-23,12,-11,12,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,12,-89,-90,-14,-88,-13,12,12,-12,-83,-85,12,12,12,-84,-86,-87,]),'$end':([1,2,3,4,5,6,7,13,16,44,50,98,99,102,134,136,147,157,164,],[0,-1,-3,-4,-5,-6,-7,-2,-8,-9,-10,-22,-23,-11,-15,-31,-14,-13,-12,]),'IDENTIFIER':([8,9,10,11,12,15,16,17,19,28,29,30,31,36,38,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,71,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,129,130,134,136,137,138,139,140,141,143,144,147,149,152,153,154,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[14,-16,-17,-18,-19,20,-8,21,21,21,21,67,68,21,70,-9,21,21,21,-10,21,21,21,21,21,21,21,21,21,21,21,21,21,21,97,21,-11,21,21,21,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,21,145,21,-15,-31,-32,-44,21,21,21,-89,-90,-14,21,21,21,163,-88,-13,21,21,21,21,-12,-83,-85,21,21,21,-84,-86,-87,]),'TIMES':([8,9,10,11,12,21,22,23,24,25,26,27,32,33,34,35,37,38,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,129,133,135,142,150,151,154,158,167,168,],[15,-16,-17,-18,-19,-70,53,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,71,53,-68,-69,-64,-65,-66,-67,53,53,53,53,53,53,-53,-54,-55,53,53,53,53,53,53,53,53,53,-75,-79,-78,53,15,53,53,53,53,53,15,53,53,53,]),'SEMICOLON':([14,20,21,22,23,24,25,26,27,32,33,34,35,37,46,47,65,66,67,68,72,74,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,107,122,127,128,131,142,145,148,156,163,],[16,44,-70,50,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,-68,-69,-64,-65,-66,-67,98,102,-49,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-50,-75,134,-79,-78,138,143,144,147,155,16,157,164,16,]),'ASSIGN':([14,21,27,43,74,106,145,163,],[17,45,64,75,103,-79,17,17,]),'LPAREN':([14,16,17,19,21,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[18,-8,36,36,49,36,36,36,-9,36,36,36,-10,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-11,36,36,36,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,139,140,141,36,36,-15,-31,-32,-44,36,36,36,-89,-90,-14,36,36,36,-88,-13,36,36,36,36,-12,-83,-85,36,36,36,-84,-86,-87,]),'LBRACKET':([14,21,70,145,],[19,48,96,19,]),'RBRACE':([16,21,23,24,25,26,27,32,33,34,35,37,44,46,47,50,65,66,67,68,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,102,106,107,110,111,112,113,114,115,116,117,118,119,120,121,132,133,134,136,137,138,143,144,146,147,155,157,158,159,160,164,165,166,169,170,171,172,173,174,],[-8,-70,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,-9,-68,-69,-10,-64,-65,-66,-67,-49,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-50,-75,-30,-11,-79,-78,136,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,148,-21,-15,-31,-32,-44,-89,-90,156,-14,-88,-13,-20,-30,-30,-12,-83,-85,-30,-30,-30,-84,-86,-87,]),'LBRACE':([16,44,50,72,75,100,102,103,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,100,104,100,-11,130,100,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,100,100,-12,-83,-85,100,100,100,-84,-86,-87,]),'IF':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,123,-11,123,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,123,123,-12,-83,-85,123,123,123,-84,-86,-87,]),'WHILE':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,124,-11,124,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,124,124,-12,-83,-85,124,124,124,-84,-86,-87,]),'FOR':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,125,-11,125,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,125,125,-12,-83,-85,125,125,125,-84,-86,-87,]),'RETURN':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,126,-11,126,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,126,126,-12,-83,-85,126,126,126,-84,-86,-87,]),'CONTINUE':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,127,-11,127,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,127,127,-12,-83,-85,127,127,127,-84,-86,-87,]),'BREAK':([16,44,50,100,102,110,111,112,113,114,115,116,117,118,119,120,121,134,136,137,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,128,-11,128,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-32,-44,-89,-90,-14,-88,-13,128,128,-12,-83,-85,128,128,128,-84,-86,-87,]),'MINUS':([16,17,19,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,102,104,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,126,130,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,155,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,],[-8,28,28,-70,52,-45,-46,-47,-48,-77,28,28,-71,-72,-73,-74,28,-76,52,-9,28,-68,-69,28,28,-10,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-64,-65,-66,-67,52,52,52,52,-51,-52,-53,-54,-55,52,52,52,52,52,52,52,52,52,-75,28,-11,28,-79,-78,28,28,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,52,28,28,52,-15,52,-31,-32,-44,28,28,28,52,-89,-90,-14,28,52,52,28,28,-88,-13,52,28,28,28,28,-12,-83,-85,52,52,28,28,28,-84,-86,-87,]),'NOT':([16,17,19,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,29,29,29,29,29,-9,29,29,29,-10,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-11,29,29,29,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,29,29,-15,-31,-32,-44,29,29,29,-89,-90,-14,29,29,29,-88,-13,29,29,29,29,-12,-83,-85,29,29,29,-84,-86,-87,]),'INC':([16,17,19,21,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,30,30,46,30,30,30,-9,30,30,30,-10,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-11,30,30,30,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,30,30,-15,-31,-32,-44,30,30,30,-89,-90,-14,30,30,30,-88,-13,30,30,30,30,-12,-83,-85,30,30,30,-84,-86,-87,]),'DEC':([16,17,19,21,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,31,31,47,31,31,31,-9,31,31,31,-10,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-11,31,31,31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,31,31,-15,-31,-32,-44,31,31,31,-89,-90,-14,31,31,31,-88,-13,31,31,31,31,-12,-83,-85,31,31,31,-84,-86,-87,]),'INT_LITERAL':([16,17,19,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,32,32,32,32,32,-9,32,32,32,-10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-11,32,32,32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,32,32,-15,-31,-32,-44,32,32,32,-89,-90,-14,32,32,32,-88,-13,32,32,32,32,-12,-83,-85,32,32,32,-84,-86,-87,]),'FLOAT_LITERAL':([16,17,19,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,33,33,33,33,33,-9,33,33,33,-10,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-11,33,33,33,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,33,33,-15,-31,-32,-44,33,33,33,-89,-90,-14,33,33,33,-88,-13,33,33,33,33,-12,-83,-85,33,33,33,-84,-86,-87,]),'CHAR_LITERAL':([16,17,19,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,102,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,34,34,34,34,34,-9,34,34,34,-10,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-11,34,34,34,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,34,34,-15,-31,-32,-44,34,34,34,-89,-90,-14,34,34,34,-88,-13,34,34,34,34,-12,-83,-85,34,34,34,-84,-86,-87,]),'STRING_LITERAL':([16,17,19,28,29,36,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,75,100,102,103,104,108,110,111,112,113,114,115,116,117,118,119,120,121,126,130,134,136,137,138,139,140,141,143,144,147,149,152,153,155,157,159,160,161,162,164,165,166,169,170,171,172,173,174,],[-8,35,35,35,35,35,-9,35,35,35,-10,35,35,35,35,35,35,35,35,35,35,35,35,35,35,105,35,-11,131,35,35,35,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,35,35,-15,-31,-32,-44,35,35,35,-89,-90,-14,35,35,35,-88,-13,35,35,35,35,-12,-83,-85,35,35,35,-84,-86,-87,]),'ELSE':([16,44,50,102,112,113,114,115,116,117,118,119,120,121,134,136,138,143,144,147,155,157,159,160,164,165,166,169,170,171,172,173,174,],[-8,-9,-10,-11,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-15,-31,-44,-89,-90,-14,-88,-13,-30,-30,-12,169,-85,-30,-30,-30,-84,-86,-87,]),'RPAREN':([18,21,23,24,25,26,27,32,33,34,35,37,39,40,41,46,47,49,65,66,67,68,69,70,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,101,106,107,109,135,150,151,167,168,],[-30,-70,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,72,-25,-26,-68,-69,-30,-64,-65,-66,-67,95,-27,-49,107,-81,-82,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-50,-75,-29,-24,-79,-78,-28,-80,159,160,170,171,]),'COMMA':([18,21,23,24,25,26,27,32,33,34,35,37,39,40,41,46,47,49,65,66,67,68,70,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,101,106,107,109,132,133,135,146,158,],[-30,-70,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,73,-25,-26,-68,-69,-30,-64,-65,-66,-67,-27,-49,108,-81,-82,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-50,-75,-29,-24,-79,-78,-28,149,-21,-80,149,-20,]),'RBRACKET':([19,21,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,106,107,],[43,-70,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,74,-68,-69,-64,-65,-66,-67,-49,106,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-50,-75,109,-79,-78,]),'PLUS':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,51,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,51,-68,-69,-64,-65,-66,-67,51,51,51,51,-51,-52,-53,-54,-55,51,51,51,51,51,51,51,51,51,-75,-79,-78,51,51,51,51,51,51,51,51,51,]),'DIVIDE':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,54,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,54,-68,-69,-64,-65,-66,-67,54,54,54,54,54,54,-53,-54,-55,54,54,54,54,54,54,54,54,54,-75,-79,-78,54,54,54,54,54,54,54,54,54,]),'MOD':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,55,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,55,-68,-69,-64,-65,-66,-67,55,55,55,55,55,55,-53,-54,-55,55,55,55,55,55,55,55,55,55,-75,-79,-78,55,55,55,55,55,55,55,55,55,]),'EQ':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,56,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,56,-68,-69,-64,-65,-66,-67,56,56,56,56,-51,-52,-53,-54,-55,None,None,-58,-59,-60,-61,56,56,56,-75,-79,-78,56,56,56,56,56,56,56,56,56,]),'NEQ':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,57,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,57,-68,-69,-64,-65,-66,-67,57,57,57,57,-51,-52,-53,-54,-55,None,None,-58,-59,-60,-61,57,57,57,-75,-79,-78,57,57,57,57,57,57,57,57,57,]),'LT':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,58,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,58,-68,-69,-64,-65,-66,-67,58,58,58,58,-51,-52,-53,-54,-55,58,58,None,None,None,None,58,58,58,-75,-79,-78,58,58,58,58,58,58,58,58,58,]),'GT':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,59,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,59,-68,-69,-64,-65,-66,-67,59,59,59,59,-51,-52,-53,-54,-55,59,59,None,None,None,None,59,59,59,-75,-79,-78,59,59,59,59,59,59,59,59,59,]),'LTE':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,60,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,60,-68,-69,-64,-65,-66,-67,60,60,60,60,-51,-52,-53,-54,-55,60,60,None,None,None,None,60,60,60,-75,-79,-78,60,60,60,60,60,60,60,60,60,]),'GTE':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,61,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,61,-68,-69,-64,-65,-66,-67,61,61,61,61,-51,-52,-53,-54,-55,61,61,None,None,None,None,61,61,61,-75,-79,-78,61,61,61,61,61,61,61,61,61,]),'AND':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,62,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,62,-68,-69,-64,-65,-66,-67,62,62,62,62,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,62,62,-75,-79,-78,62,62,62,62,62,62,62,62,62,]),'OR':([21,22,23,24,25,26,27,32,33,34,35,37,42,46,47,65,66,67,68,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,122,133,135,142,150,151,158,167,168,],[-70,63,-45,-46,-47,-48,-77,-71,-72,-73,-74,-76,63,-68,-69,-64,-65,-66,-67,63,63,63,63,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,63,-75,-79,-78,63,63,63,63,63,63,63,63,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,13,]),'var_declaration':([0,2,100,110,141,159,160,169,170,171,],[4,4,119,119,153,119,119,119,119,119,]),'function_declaration':([0,2,],[5,5,]),'function_definition':([0,2,],[6,6,]),'array_declaration':([0,2,100,110,159,160,169,170,171,],[7,7,120,120,120,120,120,120,120,]),'type_specifier':([0,2,18,73,100,110,141,159,160,169,170,171,],[8,8,38,38,129,129,154,129,129,129,129,129,]),'expression':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[22,42,65,66,69,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,122,133,135,122,142,133,150,151,122,158,122,122,122,122,167,168,122,122,122,]),'assignment_expression':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'binary_expression':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'unary_expression':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'term':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'array_access':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'function_call':([17,19,28,29,36,45,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,100,104,108,110,126,130,139,140,141,149,152,153,159,160,161,162,169,170,171,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'param_list':([18,],[39,]),'param':([18,73,],[40,101,]),'empty':([18,49,100,110,159,160,169,170,171,],[41,80,121,121,121,121,121,121,121,]),'argument_list':([49,],[78,]),'compound_statement':([72,100,110,159,160,169,170,171,],[99,113,113,113,113,113,113,113,]),'statement_list':([100,],[110,]),'statement':([100,110,159,160,169,170,171,],[111,137,165,166,172,173,174,]),'expression_statement':([100,110,141,152,153,159,160,169,170,171,],[112,112,152,161,162,112,112,112,112,112,]),'selection_statement':([100,110,159,160,169,170,171,],[114,114,114,114,114,114,114,]),'iteration_statement':([100,110,159,160,169,170,171,],[115,115,115,115,115,115,115,]),'return_statement':([100,110,159,160,169,170,171,],[116,116,116,116,116,116,116,]),'continue_statement':([100,110,159,160,169,170,171,],[117,117,117,117,117,117,117,]),'break_statement':([100,110,159,160,169,170,171,],[118,118,118,118,118,118,118,]),'array_list':([104,130,],[132,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','c_parser.py',23),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','c_parser.py',28),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','c_parser.py',32),
  ('declaration -> var_declaration','declaration',1,'p_declaration','c_parser.py',36),
  ('declaration -> function_declaration','declaration',1,'p_declaration','c_parser.py',37),
  ('declaration -> function_definition','declaration',1,'p_declaration','c_parser.py',38),
  ('declaration -> array_declaration','declaration',1,'p_declaration','c_parser.py',39),
  ('var_declaration -> type_specifier IDENTIFIER SEMICOLON','var_declaration',3,'p_var_declaration_1','c_parser.py',44),
  ('var_declaration -> type_specifier TIMES IDENTIFIER SEMICOLON','var_declaration',4,'p_var_declaration_1','c_parser.py',45),
  ('var_declaration -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON','var_declaration',5,'p_var_declaration_2','c_parser.py',52),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON','array_declaration',6,'p_array_declaration_1','c_parser.py',56),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLON','array_declaration',10,'p_array_declaration_2','c_parser.py',60),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLON','array_declaration',9,'p_array_declaration_3','c_parser.py',64),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN STRING_LITERAL SEMICOLON','array_declaration',8,'p_array_declaration_4','c_parser.py',68),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN STRING_LITERAL SEMICOLON','array_declaration',7,'p_array_declaration_5','c_parser.py',72),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','c_parser.py',76),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','c_parser.py',77),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','c_parser.py',78),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','c_parser.py',79),
  ('array_list -> array_list COMMA expression','array_list',3,'p_array_list_1','c_parser.py',83),
  ('array_list -> expression','array_list',1,'p_array_list_2','c_parser.py',87),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN param_list RPAREN SEMICOLON','function_declaration',6,'p_function_declaration','c_parser.py',92),
  ('function_definition -> type_specifier IDENTIFIER LPAREN param_list RPAREN compound_statement','function_definition',6,'p_function_definition','c_parser.py',96),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','c_parser.py',100),
  ('param_list -> param','param_list',1,'p_param_list_2','c_parser.py',104),
  ('param_list -> empty','param_list',1,'p_param_list_empty','c_parser.py',108),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param_1','c_parser.py',112),
  ('param -> type_specifier IDENTIFIER LBRACKET RBRACKET','param',4,'p_param_2','c_parser.py',116),
  ('param -> type_specifier TIMES IDENTIFIER','param',3,'p_param_3','c_parser.py',120),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',124),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','c_parser.py',128),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','c_parser.py',133),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','c_parser.py',137),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',141),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',142),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',143),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',144),
  ('statement -> return_statement','statement',1,'p_statement','c_parser.py',145),
  ('statement -> continue_statement','statement',1,'p_statement','c_parser.py',146),
  ('statement -> break_statement','statement',1,'p_statement','c_parser.py',147),
  ('statement -> var_declaration','statement',1,'p_statement','c_parser.py',148),
  ('statement -> array_declaration','statement',1,'p_statement','c_parser.py',149),
  ('statement -> empty','statement',1,'p_statement','c_parser.py',150),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','c_parser.py',155),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',159),
  ('expression -> binary_expression','expression',1,'p_expression','c_parser.py',160),
  ('expression -> unary_expression','expression',1,'p_expression','c_parser.py',161),
  ('expression -> term','expression',1,'p_expression','c_parser.py',162),
  ('assignment_expression -> IDENTIFIER ASSIGN expression','assignment_expression',3,'p_assignment_expression_1','c_parser.py',166),
  ('assignment_expression -> array_access ASSIGN expression','assignment_expression',3,'p_assignment_expression_2','c_parser.py',170),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','c_parser.py',174),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','c_parser.py',175),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','c_parser.py',176),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','c_parser.py',177),
  ('binary_expression -> expression MOD expression','binary_expression',3,'p_binary_expression','c_parser.py',178),
  ('binary_expression -> expression EQ expression','binary_expression',3,'p_binary_expression','c_parser.py',179),
  ('binary_expression -> expression NEQ expression','binary_expression',3,'p_binary_expression','c_parser.py',180),
  ('binary_expression -> expression LT expression','binary_expression',3,'p_binary_expression','c_parser.py',181),
  ('binary_expression -> expression GT expression','binary_expression',3,'p_binary_expression','c_parser.py',182),
  ('binary_expression -> expression LTE expression','binary_expression',3,'p_binary_expression','c_parser.py',183),
  ('binary_expression -> expression GTE expression','binary_expression',3,'p_binary_expression','c_parser.py',184),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','c_parser.py',185),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','c_parser.py',186),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','c_parser.py',190),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','c_parser.py',191),
  ('unary_expression -> INC IDENTIFIER','unary_expression',2,'p_unary_expression','c_parser.py',192),
  ('unary_expression -> DEC IDENTIFIER','unary_expression',2,'p_unary_expression','c_parser.py',193),
  ('unary_expression -> IDENTIFIER INC','unary_expression',2,'p_unary_expression','c_parser.py',194),
  ('unary_expression -> IDENTIFIER DEC','unary_expression',2,'p_unary_expression','c_parser.py',195),
  ('term -> IDENTIFIER','term',1,'p_term','c_parser.py',199),
  ('term -> INT_LITERAL','term',1,'p_term','c_parser.py',200),
  ('term -> FLOAT_LITERAL','term',1,'p_term','c_parser.py',201),
  ('term -> CHAR_LITERAL','term',1,'p_term','c_parser.py',202),
  ('term -> STRING_LITERAL','term',1,'p_term','c_parser.py',203),
  ('term -> LPAREN expression RPAREN','term',3,'p_term','c_parser.py',204),
  ('term -> function_call','term',1,'p_term','c_parser.py',205),
  ('term -> array_access','term',1,'p_term','c_parser.py',206),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','c_parser.py',210),
  ('array_access -> IDENTIFIER LBRACKET expression RBRACKET','array_access',4,'p_array_access','c_parser.py',214),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','c_parser.py',218),
  ('argument_list -> expression','argument_list',1,'p_argument_list','c_parser.py',219),
  ('argument_list -> empty','argument_list',1,'p_argument_list','c_parser.py',220),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',230),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',234),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','c_parser.py',238),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','c_parser.py',239),
  ('iteration_statement -> FOR LPAREN var_declaration expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','c_parser.py',240),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','c_parser.py',247),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','c_parser.py',251),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','c_parser.py',255),
]
