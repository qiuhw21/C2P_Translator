
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDnonassocEQNEQnonassocLTLTEGTGTEleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSNOTAND ASSIGN BREAK CHAR CHAR_LITERAL COMMA COMMENT_MULTI COMMENT_SINGLE CONTINUE DEC DIVIDE ELSE EQ FLOAT FLOAT_LITERAL FOR GT GTE IDENTIFIER IF INC INT INT_LITERAL LBRACE LBRACKET LPAREN LT LTE MINUS MOD NEQ NOT OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING_LITERAL TIMES VOID WHILEprogram : declaration_listdeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declaration\n                   | function_declaration\n                   | function_definition\n                   | array_declarationvar_declaration : var_direct_declaration\n                          | var_pointer_declaration\n                          | var_declaration_initvar_direct_declaration : type_specifier IDENTIFIER SEMICOLONvar_pointer_declaration : type_specifier TIMES IDENTIFIER SEMICOLONvar_declaration_init : type_specifier IDENTIFIER ASSIGN expression SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN STRING_LITERAL SEMICOLONarray_declaration : type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN STRING_LITERAL SEMICOLONtype_specifier : INT\n                      | FLOAT\n                      | CHAR\n                      | VOIDarray_list : array_list COMMA expressionarray_list : expressionfunction_declaration : type_specifier IDENTIFIER LPAREN param_list RPAREN SEMICOLONfunction_definition : type_specifier IDENTIFIER LPAREN param_list RPAREN compound_statementparam_list : param_list COMMA paramparam_list : paramparam_list : emptyparam : type_specifier IDENTIFIERparam : type_specifier IDENTIFIER LBRACKET RBRACKETparam : type_specifier TIMES IDENTIFIERempty :compound_statement : LBRACE statement_list RBRACEstatement_list : statement_list statementstatement_list : statementstatement : expression_statement\n                 | compound_statement\n                 | selection_statement\n                 | iteration_statement\n                 | return_statement\n                 | continue_statement\n                 | break_statement\n                 | var_declaration\n                 | array_declaration\n                 | emptyexpression_statement : expression SEMICOLONexpression : assignment_expression\n                  | binary_expression\n                  | unary_expression\n                  | function_call\n                  | array_access\n                  | termassignment_expression : IDENTIFIER ASSIGN expressionassignment_expression : array_access ASSIGN expressionbinary_expression : expression PLUS expression\n                         | expression MINUS expression\n                         | expression TIMES expression\n                         | expression DIVIDE expression\n                         | expression MOD expression\n                         | expression EQ expression\n                         | expression NEQ expression\n                         | expression LT expression\n                         | expression GT expression\n                         | expression LTE expression\n                         | expression GTE expression\n                         | expression AND expression\n                         | expression OR expressionunary_expression : MINUS expression %prec UMINUS\n                        | NOT expression\n                        | INC IDENTIFIER\n                        | DEC IDENTIFIER\n                        | IDENTIFIER INC\n                        | IDENTIFIER DECterm : IDENTIFIER\n            | INT_LITERAL\n            | FLOAT_LITERAL\n            | CHAR_LITERAL\n            | STRING_LITERAL\n            | LPAREN expression RPARENfunction_call : IDENTIFIER LPAREN argument_list RPARENarray_access : IDENTIFIER LBRACKET expression RBRACKETargument_list : argument_list COMMA expression\n                     | expression\n                     | emptyselection_statement : IF LPAREN expression RPAREN statementselection_statement : IF LPAREN expression RPAREN statement ELSE statementiteration_statement : WHILE LPAREN expression RPAREN statement\n                           | for_expression_statement\n                            | for_var_declarationfor_expression_statement : FOR LPAREN expression_statement expression_statement expression RPAREN statementfor_var_declaration : FOR LPAREN var_declaration expression_statement expression RPAREN statementreturn_statement : RETURN expression SEMICOLONcontinue_statement : CONTINUE SEMICOLONbreak_statement : BREAK SEMICOLON'
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,16,19,20,47,51,78,81,82,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,149,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-2,12,-11,-12,12,-13,-25,-26,12,-14,12,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,12,-17,-93,-16,12,12,-15,-86,-88,12,12,12,-87,-91,-92,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,16,19,20,47,51,78,81,82,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,149,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-2,13,-11,-12,13,-13,-25,-26,13,-14,13,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,13,-17,-93,-16,13,13,-15,-86,-88,13,13,13,-87,-91,-92,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,16,19,20,47,51,78,81,82,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,149,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-2,14,-11,-12,14,-13,-25,-26,14,-14,14,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,14,-17,-93,-16,14,14,-15,-86,-88,14,14,14,-87,-91,-92,]),'VOID':([0,2,3,4,5,6,7,8,9,10,16,19,20,47,51,78,81,82,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,149,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,15,-11,-12,15,-13,-25,-26,15,-14,15,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,15,-17,-93,-16,15,15,-15,-86,-88,15,15,15,-87,-91,-92,]),'$end':([1,2,3,4,5,6,7,8,9,10,16,20,47,78,81,82,90,139,140,152,162,169,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-13,-25,-26,-14,-18,-34,-17,-16,-15,]),'RBRACE':([8,9,10,20,28,31,32,33,34,35,36,37,43,44,45,47,53,54,73,74,75,76,78,83,85,90,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,110,111,112,113,114,115,116,117,118,119,120,121,125,126,132,134,137,138,139,140,141,142,146,147,151,152,157,162,163,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-75,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,-12,-73,-74,-69,-70,-71,-72,-13,-33,-54,-14,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-55,-80,140,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-81,-82,153,-24,-18,-34,-35,-47,-94,-95,161,-17,-93,-16,-23,-33,-33,-15,-86,-88,-33,-33,-33,-87,-91,-92,]),'LBRACE':([8,9,10,20,47,50,71,78,83,90,91,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,83,105,-13,83,-14,135,83,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,83,83,-15,-86,-88,83,83,83,-87,-91,-92,]),'IF':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,123,-14,123,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,123,123,-15,-86,-88,123,123,123,-87,-91,-92,]),'WHILE':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,124,-14,124,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,124,124,-15,-86,-88,124,124,124,-87,-91,-92,]),'RETURN':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,127,-14,127,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,127,127,-15,-86,-88,127,127,127,-87,-91,-92,]),'CONTINUE':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,128,-14,128,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,128,128,-15,-86,-88,128,128,128,-87,-91,-92,]),'BREAK':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,129,-14,129,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,129,129,-15,-86,-88,129,129,129,-87,-91,-92,]),'FOR':([8,9,10,20,47,78,83,90,110,111,112,113,114,115,116,117,118,119,120,121,125,126,139,140,141,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,131,-14,131,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-35,-47,-94,-95,-17,-93,-16,131,131,-15,-86,-88,131,131,131,-87,-91,-92,]),'IDENTIFIER':([8,9,10,11,12,13,14,15,18,20,21,22,24,38,39,40,41,42,47,49,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,130,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,160,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,17,-19,-20,-21,-22,23,-11,28,28,48,28,28,75,76,28,-12,80,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-13,28,-14,28,28,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,28,148,28,28,-18,-34,-35,-47,28,28,-94,-95,28,-17,28,-93,28,28,168,-16,28,28,28,28,-15,-86,-88,28,28,28,-87,-91,-92,]),'MINUS':([8,9,10,20,21,22,28,29,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,83,85,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,132,133,134,135,138,139,140,141,142,143,144,145,146,147,149,150,152,154,155,156,157,158,159,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,],[-8,-9,-10,-11,38,38,-75,59,-79,-48,-49,-50,-51,-52,-53,38,38,38,-76,-77,-78,59,-12,38,-73,-74,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-69,-70,-71,-72,59,-13,38,59,59,59,-14,-56,-57,-58,-59,-60,59,59,59,59,59,59,59,59,38,59,-80,38,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,59,-89,-90,38,-81,38,-82,38,59,-18,-34,-35,-47,38,38,59,-94,-95,38,59,-17,38,59,59,-93,38,38,-16,59,38,38,38,38,-15,-86,-88,59,59,38,38,38,-87,-91,-92,]),'NOT':([8,9,10,20,21,22,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,39,39,39,39,39,-12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-13,39,-14,39,39,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,39,39,39,-18,-34,-35,-47,39,39,-94,-95,39,-17,39,-93,39,39,-16,39,39,39,39,-15,-86,-88,39,39,39,-87,-91,-92,]),'INC':([8,9,10,20,21,22,28,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,40,40,53,40,40,40,-12,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-13,40,-14,40,40,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,40,40,40,-18,-34,-35,-47,40,40,-94,-95,40,-17,40,-93,40,40,-16,40,40,40,40,-15,-86,-88,40,40,40,-87,-91,-92,]),'DEC':([8,9,10,20,21,22,28,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,41,41,54,41,41,41,-12,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-13,41,-14,41,41,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,41,41,41,-18,-34,-35,-47,41,41,-94,-95,41,-17,41,-93,41,41,-16,41,41,41,41,-15,-86,-88,41,41,41,-87,-91,-92,]),'INT_LITERAL':([8,9,10,20,21,22,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,43,43,43,43,43,-12,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-13,43,-14,43,43,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,43,43,43,-18,-34,-35,-47,43,43,-94,-95,43,-17,43,-93,43,43,-16,43,43,43,43,-15,-86,-88,43,43,43,-87,-91,-92,]),'FLOAT_LITERAL':([8,9,10,20,21,22,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,44,44,44,44,44,-12,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-13,44,-14,44,44,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,44,44,44,-18,-34,-35,-47,44,44,-94,-95,44,-17,44,-93,44,44,-16,44,44,44,44,-15,-86,-88,44,44,44,-87,-91,-92,]),'CHAR_LITERAL':([8,9,10,20,21,22,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,45,45,45,45,45,-12,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-13,45,-14,45,45,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,45,45,45,-18,-34,-35,-47,45,45,-94,-95,45,-17,45,-93,45,45,-16,45,45,45,45,-15,-86,-88,45,45,45,-87,-91,-92,]),'STRING_LITERAL':([8,9,10,20,21,22,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,83,90,91,105,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,31,31,31,31,31,-12,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,106,31,-13,31,-14,136,31,31,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,31,31,31,-18,-34,-35,-47,31,31,-94,-95,31,-17,31,-93,31,31,-16,31,31,31,31,-15,-86,-88,31,31,31,-87,-91,-92,]),'LPAREN':([8,9,10,17,20,21,22,28,38,39,42,47,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,78,83,90,105,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,131,133,135,139,140,141,142,143,144,146,147,149,152,154,157,158,159,162,164,165,166,167,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,19,-11,42,42,55,42,42,42,-12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-13,42,-14,42,42,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,143,144,-89,-90,42,149,42,42,-18,-34,-35,-47,42,42,-94,-95,42,-17,42,-93,42,42,-16,42,42,42,42,-15,-86,-88,42,42,42,-87,-91,-92,]),'ELSE':([8,9,10,20,47,78,90,112,113,114,115,116,117,118,119,120,121,125,126,139,140,142,146,147,152,157,162,164,165,169,170,171,174,175,176,177,178,179,],[-8,-9,-10,-11,-12,-13,-14,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-89,-90,-18,-34,-47,-94,-95,-17,-93,-16,-33,-33,-15,174,-88,-33,-33,-33,-87,-91,-92,]),'TIMES':([11,12,13,14,15,24,28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,130,132,134,138,145,150,155,156,160,163,172,173,],[18,-19,-20,-21,-22,49,-75,60,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,60,-73,-74,-69,-70,-71,-72,60,60,60,60,60,60,-58,-59,-60,60,60,60,60,60,60,60,60,60,-80,60,18,-81,-82,60,60,60,60,60,18,60,60,60,]),'LBRACKET':([17,28,48,148,],[21,56,79,21,]),'SEMICOLON':([17,23,28,31,32,33,34,35,36,37,43,44,45,46,50,53,54,57,73,74,75,76,85,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,122,128,129,132,134,136,145,148,153,161,168,],[20,47,-75,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,78,81,-73,-74,90,-69,-70,-71,-72,-54,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,139,-55,-80,142,146,147,-81,-82,152,157,20,162,169,20,]),'ASSIGN':([17,28,30,36,57,134,148,168,],[22,52,71,72,91,-82,22,22,]),'RPAREN':([19,25,26,27,28,31,32,33,34,35,36,37,43,44,45,48,53,54,55,73,74,75,76,77,80,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,132,134,150,155,156,172,173,],[-33,50,-28,-29,-75,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,-30,-73,-74,-33,-69,-70,-71,-72,108,-32,-27,-54,132,-84,-85,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-55,-80,-31,-81,-82,-83,164,165,175,176,]),'COMMA':([19,25,26,27,28,31,32,33,34,35,36,37,43,44,45,48,53,54,55,73,74,75,76,80,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,132,134,137,138,150,151,163,],[-33,51,-28,-29,-75,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,-30,-73,-74,-33,-69,-70,-71,-72,-32,-27,-54,133,-84,-85,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-55,-80,-31,-81,-82,154,-24,-83,154,-23,]),'RBRACKET':([21,28,29,31,32,33,34,35,36,37,43,44,45,53,54,73,74,75,76,79,85,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,132,134,],[30,-75,57,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,-73,-74,-69,-70,-71,-72,109,-54,134,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-55,-80,-81,-82,]),'PLUS':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,58,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,58,-73,-74,-69,-70,-71,-72,58,58,58,58,-56,-57,-58,-59,-60,58,58,58,58,58,58,58,58,58,-80,58,-81,-82,58,58,58,58,58,58,58,58,]),'DIVIDE':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,61,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,61,-73,-74,-69,-70,-71,-72,61,61,61,61,61,61,-58,-59,-60,61,61,61,61,61,61,61,61,61,-80,61,-81,-82,61,61,61,61,61,61,61,61,]),'MOD':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,62,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,62,-73,-74,-69,-70,-71,-72,62,62,62,62,62,62,-58,-59,-60,62,62,62,62,62,62,62,62,62,-80,62,-81,-82,62,62,62,62,62,62,62,62,]),'EQ':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,63,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,63,-73,-74,-69,-70,-71,-72,63,63,63,63,-56,-57,-58,-59,-60,None,None,-63,-64,-65,-66,63,63,63,-80,63,-81,-82,63,63,63,63,63,63,63,63,]),'NEQ':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,64,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,64,-73,-74,-69,-70,-71,-72,64,64,64,64,-56,-57,-58,-59,-60,None,None,-63,-64,-65,-66,64,64,64,-80,64,-81,-82,64,64,64,64,64,64,64,64,]),'LT':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,65,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,65,-73,-74,-69,-70,-71,-72,65,65,65,65,-56,-57,-58,-59,-60,65,65,None,None,None,None,65,65,65,-80,65,-81,-82,65,65,65,65,65,65,65,65,]),'GT':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,66,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,66,-73,-74,-69,-70,-71,-72,66,66,66,66,-56,-57,-58,-59,-60,66,66,None,None,None,None,66,66,66,-80,66,-81,-82,66,66,66,66,66,66,66,66,]),'LTE':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,67,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,67,-73,-74,-69,-70,-71,-72,67,67,67,67,-56,-57,-58,-59,-60,67,67,None,None,None,None,67,67,67,-80,67,-81,-82,67,67,67,67,67,67,67,67,]),'GTE':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,68,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,68,-73,-74,-69,-70,-71,-72,68,68,68,68,-56,-57,-58,-59,-60,68,68,None,None,None,None,68,68,68,-80,68,-81,-82,68,68,68,68,68,68,68,68,]),'AND':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,69,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,69,-73,-74,-69,-70,-71,-72,69,69,69,69,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,69,69,-80,69,-81,-82,69,69,69,69,69,69,69,69,]),'OR':([28,29,31,32,33,34,35,36,37,43,44,45,46,53,54,73,74,75,76,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,122,132,134,138,145,150,155,156,163,172,173,],[-75,70,-79,-48,-49,-50,-51,-52,-53,-76,-77,-78,70,-73,-74,-69,-70,-71,-72,70,70,70,70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,70,-80,70,-81,-82,70,70,70,70,70,70,70,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,16,]),'var_declaration':([0,2,83,110,149,164,165,174,175,176,],[4,4,119,119,159,119,119,119,119,119,]),'function_declaration':([0,2,],[5,5,]),'function_definition':([0,2,],[6,6,]),'array_declaration':([0,2,83,110,164,165,174,175,176,],[7,7,120,120,120,120,120,120,120,]),'var_direct_declaration':([0,2,83,110,149,164,165,174,175,176,],[8,8,8,8,8,8,8,8,8,8,]),'var_pointer_declaration':([0,2,83,110,149,164,165,174,175,176,],[9,9,9,9,9,9,9,9,9,9,]),'var_declaration_init':([0,2,83,110,149,164,165,174,175,176,],[10,10,10,10,10,10,10,10,10,10,]),'type_specifier':([0,2,19,51,83,110,149,164,165,174,175,176,],[11,11,24,24,130,130,160,130,130,130,130,130,]),'param_list':([19,],[25,]),'param':([19,51,],[26,84,]),'empty':([19,55,83,110,164,165,174,175,176,],[27,88,121,121,121,121,121,121,121,]),'expression':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[29,46,73,74,77,85,87,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,122,138,122,145,150,138,155,156,122,163,122,122,122,122,172,173,122,122,122,]),'assignment_expression':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'binary_expression':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'unary_expression':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'function_call':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'array_access':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'term':([21,22,38,39,42,52,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,83,105,110,127,133,135,143,144,149,154,158,159,164,165,166,167,174,175,176,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'compound_statement':([50,83,110,164,165,174,175,176,],[82,113,113,113,113,113,113,113,]),'argument_list':([55,],[86,]),'statement_list':([83,],[110,]),'statement':([83,110,164,165,174,175,176,],[111,141,170,171,177,178,179,]),'expression_statement':([83,110,149,158,159,164,165,174,175,176,],[112,112,158,166,167,112,112,112,112,112,]),'selection_statement':([83,110,164,165,174,175,176,],[114,114,114,114,114,114,114,]),'iteration_statement':([83,110,164,165,174,175,176,],[115,115,115,115,115,115,115,]),'return_statement':([83,110,164,165,174,175,176,],[116,116,116,116,116,116,116,]),'continue_statement':([83,110,164,165,174,175,176,],[117,117,117,117,117,117,117,]),'break_statement':([83,110,164,165,174,175,176,],[118,118,118,118,118,118,118,]),'for_expression_statement':([83,110,164,165,174,175,176,],[125,125,125,125,125,125,125,]),'for_var_declaration':([83,110,164,165,174,175,176,],[126,126,126,126,126,126,126,]),'array_list':([105,135,],[137,151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','c_parser.py',23),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','c_parser.py',28),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','c_parser.py',32),
  ('declaration -> var_declaration','declaration',1,'p_declaration','c_parser.py',36),
  ('declaration -> function_declaration','declaration',1,'p_declaration','c_parser.py',37),
  ('declaration -> function_definition','declaration',1,'p_declaration','c_parser.py',38),
  ('declaration -> array_declaration','declaration',1,'p_declaration','c_parser.py',39),
  ('var_declaration -> var_direct_declaration','var_declaration',1,'p_var_declaration','c_parser.py',44),
  ('var_declaration -> var_pointer_declaration','var_declaration',1,'p_var_declaration','c_parser.py',45),
  ('var_declaration -> var_declaration_init','var_declaration',1,'p_var_declaration','c_parser.py',46),
  ('var_direct_declaration -> type_specifier IDENTIFIER SEMICOLON','var_direct_declaration',3,'p_var_direct_declaration','c_parser.py',50),
  ('var_pointer_declaration -> type_specifier TIMES IDENTIFIER SEMICOLON','var_pointer_declaration',4,'p_var_pointer_declaration','c_parser.py',54),
  ('var_declaration_init -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON','var_declaration_init',5,'p_var_declaration_init','c_parser.py',58),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON','array_declaration',6,'p_array_declaration_1','c_parser.py',62),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLON','array_declaration',10,'p_array_declaration_2','c_parser.py',66),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN LBRACE array_list RBRACE SEMICOLON','array_declaration',9,'p_array_declaration_3','c_parser.py',70),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN STRING_LITERAL SEMICOLON','array_declaration',8,'p_array_declaration_4','c_parser.py',74),
  ('array_declaration -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN STRING_LITERAL SEMICOLON','array_declaration',7,'p_array_declaration_5','c_parser.py',78),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','c_parser.py',82),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','c_parser.py',83),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','c_parser.py',84),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','c_parser.py',85),
  ('array_list -> array_list COMMA expression','array_list',3,'p_array_list_1','c_parser.py',89),
  ('array_list -> expression','array_list',1,'p_array_list_2','c_parser.py',93),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN param_list RPAREN SEMICOLON','function_declaration',6,'p_function_declaration','c_parser.py',98),
  ('function_definition -> type_specifier IDENTIFIER LPAREN param_list RPAREN compound_statement','function_definition',6,'p_function_definition','c_parser.py',102),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','c_parser.py',106),
  ('param_list -> param','param_list',1,'p_param_list_2','c_parser.py',110),
  ('param_list -> empty','param_list',1,'p_param_list_empty','c_parser.py',114),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param_1','c_parser.py',118),
  ('param -> type_specifier IDENTIFIER LBRACKET RBRACKET','param',4,'p_param_2','c_parser.py',122),
  ('param -> type_specifier TIMES IDENTIFIER','param',3,'p_param_3','c_parser.py',126),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',130),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','c_parser.py',134),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','c_parser.py',139),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','c_parser.py',143),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',147),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',148),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',149),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',150),
  ('statement -> return_statement','statement',1,'p_statement','c_parser.py',151),
  ('statement -> continue_statement','statement',1,'p_statement','c_parser.py',152),
  ('statement -> break_statement','statement',1,'p_statement','c_parser.py',153),
  ('statement -> var_declaration','statement',1,'p_statement','c_parser.py',154),
  ('statement -> array_declaration','statement',1,'p_statement','c_parser.py',155),
  ('statement -> empty','statement',1,'p_statement','c_parser.py',156),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','c_parser.py',161),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',165),
  ('expression -> binary_expression','expression',1,'p_expression','c_parser.py',166),
  ('expression -> unary_expression','expression',1,'p_expression','c_parser.py',167),
  ('expression -> function_call','expression',1,'p_expression','c_parser.py',168),
  ('expression -> array_access','expression',1,'p_expression','c_parser.py',169),
  ('expression -> term','expression',1,'p_expression','c_parser.py',170),
  ('assignment_expression -> IDENTIFIER ASSIGN expression','assignment_expression',3,'p_assignment_expression_1','c_parser.py',174),
  ('assignment_expression -> array_access ASSIGN expression','assignment_expression',3,'p_assignment_expression_2','c_parser.py',178),
  ('binary_expression -> expression PLUS expression','binary_expression',3,'p_binary_expression','c_parser.py',182),
  ('binary_expression -> expression MINUS expression','binary_expression',3,'p_binary_expression','c_parser.py',183),
  ('binary_expression -> expression TIMES expression','binary_expression',3,'p_binary_expression','c_parser.py',184),
  ('binary_expression -> expression DIVIDE expression','binary_expression',3,'p_binary_expression','c_parser.py',185),
  ('binary_expression -> expression MOD expression','binary_expression',3,'p_binary_expression','c_parser.py',186),
  ('binary_expression -> expression EQ expression','binary_expression',3,'p_binary_expression','c_parser.py',187),
  ('binary_expression -> expression NEQ expression','binary_expression',3,'p_binary_expression','c_parser.py',188),
  ('binary_expression -> expression LT expression','binary_expression',3,'p_binary_expression','c_parser.py',189),
  ('binary_expression -> expression GT expression','binary_expression',3,'p_binary_expression','c_parser.py',190),
  ('binary_expression -> expression LTE expression','binary_expression',3,'p_binary_expression','c_parser.py',191),
  ('binary_expression -> expression GTE expression','binary_expression',3,'p_binary_expression','c_parser.py',192),
  ('binary_expression -> expression AND expression','binary_expression',3,'p_binary_expression','c_parser.py',193),
  ('binary_expression -> expression OR expression','binary_expression',3,'p_binary_expression','c_parser.py',194),
  ('unary_expression -> MINUS expression','unary_expression',2,'p_unary_expression','c_parser.py',198),
  ('unary_expression -> NOT expression','unary_expression',2,'p_unary_expression','c_parser.py',199),
  ('unary_expression -> INC IDENTIFIER','unary_expression',2,'p_unary_expression','c_parser.py',200),
  ('unary_expression -> DEC IDENTIFIER','unary_expression',2,'p_unary_expression','c_parser.py',201),
  ('unary_expression -> IDENTIFIER INC','unary_expression',2,'p_unary_expression','c_parser.py',202),
  ('unary_expression -> IDENTIFIER DEC','unary_expression',2,'p_unary_expression','c_parser.py',203),
  ('term -> IDENTIFIER','term',1,'p_term','c_parser.py',207),
  ('term -> INT_LITERAL','term',1,'p_term','c_parser.py',208),
  ('term -> FLOAT_LITERAL','term',1,'p_term','c_parser.py',209),
  ('term -> CHAR_LITERAL','term',1,'p_term','c_parser.py',210),
  ('term -> STRING_LITERAL','term',1,'p_term','c_parser.py',211),
  ('term -> LPAREN expression RPAREN','term',3,'p_term','c_parser.py',212),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','c_parser.py',216),
  ('array_access -> IDENTIFIER LBRACKET expression RBRACKET','array_access',4,'p_array_access','c_parser.py',220),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','c_parser.py',224),
  ('argument_list -> expression','argument_list',1,'p_argument_list','c_parser.py',225),
  ('argument_list -> empty','argument_list',1,'p_argument_list','c_parser.py',226),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',236),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',240),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','c_parser.py',244),
  ('iteration_statement -> for_expression_statement','iteration_statement',1,'p_iteration_statement','c_parser.py',245),
  ('iteration_statement -> for_var_declaration','iteration_statement',1,'p_iteration_statement','c_parser.py',246),
  ('for_expression_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','for_expression_statement',7,'p_for_expression_statement','c_parser.py',253),
  ('for_var_declaration -> FOR LPAREN var_declaration expression_statement expression RPAREN statement','for_var_declaration',7,'p_for_var_declaration','c_parser.py',257),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','c_parser.py',261),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','c_parser.py',265),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','c_parser.py',269),
]
